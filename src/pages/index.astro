---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import "../styles/global.css";
import { books, type Book } from "@/src/lib/books";

interface PostData {
  title: string;
  pubDate: Date;
}

const recentPosts = await getCollection("notes").then((collection) =>
  collection
    .sort(
      (a, b) =>
        new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
    )
    .slice(0, 3)
    .map((post) => ({ ...post, data: post.data as PostData })),
);

const currentlyReadingBooks = Object.values(books).filter(book => !book.finished);
---

<BaseLayout pageTitle="vlad rachev">
  <div class="flex justify-center">
    <div class="font-barlow space-y-8">
      <div>
        <p>
          <h3 class="pb-6 text-center">Hi! I'm Vlad.</h3>
          I invest in early stage business-to-developer startups at <a
            href="https://irregex.vc/"
            target="_blank"
            class="font-medium underline">Irregular Expressions</a
          >.
          <br />
          <br />
          If you're working on something developers love to use, please reach out.
          <br />
          <br />
          Outside of investing & normal non-work activities, I also have a few interests:
        </p>
        <ul class="mt-1 list-disc list-inside">
          <li>Watching the Celtics & playing fantasy basketball</li>
          <li>History, in particular about WW2 & the USSR</li>
          <li>Clean energy, the grid & the changing climate landscape</li>
          <li>Urban planning</li>
        </ul>
      </div>
      <div>
        <h3 class="font-medium">recent posts</h3>
        <ul class="space-y-1">
          {
            recentPosts.map((post) => (
              <li class="grid grid-cols-[1.5fr,10fr]">
                <p class="text-gray-600">
                  {new Intl.DateTimeFormat("en-US", {
                    month: "short",
                    day: "numeric",
                    timeZone: "UTC",
                  }).format(new Date(post.data.pubDate))}
                </p>
                <a
                  href={`/notes/${post.slug}`}
                  class="font-medium italic underline"
                >
                  {post.data.title}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
      <div>
        <h3 class="font-medium">currently reading</h3>
        <ul class="space-y-1">
          {
            Object.values(books).filter(book => !book.finished).map((book) => (
              <li class="grid grid-cols-[3fr,9fr] gap-x-4">
                <p class="text-gray-600">
                  {book.author}
                </p>
                <a
                  href={book.url}
                  target="_blank"
                  class="font-medium italic underline"
                >
                  {book.name}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </div>
</BaseLayout>
