---
import BaseLayout from "@/src/layouts/BaseLayout.astro";
import "@/src/styles/global.css";
import { getCollection } from "astro:content";
import type { Params } from 'astro';

export async function getStaticPaths() {
  // Assuming you have a function to list all weeks
  const weeks = await getCollection("thisweek");
  return weeks.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

export async function get({ params }: { params: Params }) {
  const slug = params.slug;
  const weeks = await getCollection("thisweek");
  const currentWeek = weeks.find((week) => week.slug === slug);
  if (!currentWeek) {
    return {
      status: 404,
      body: `No entry found for slug: ${slug}`,
    };
  }

  const prevWeek =
    weeks.find((week) => week.data.endDate === currentWeek.data.startDate) ||
    null;
  const nextWeek =
    weeks.find((week) => week.data.startDate === currentWeek.data.endDate) ||
    null;

  return {
    status: 200,
    body: {
      prevWeek,
      nextWeek,
      entry: currentWeek,
    },
  };
}

const slug = Astro.params.slug;
const response = await fetch(`/thisweek/${slug}`);
const { entry, prevWeek, nextWeek } = await response.json();
const { Content } = await entry.render();
const startDate = entry.data.startDate;
const endDate = entry.data.endDate;
---

<BaseLayout pageTitle={`Week of ${startDate}`}>
  <div
    class="font-code_mono text-sm bg-[rgba(220,204,204,0.4)] rounded-lg p-4 mb-4 shadow"
  >
    <h2>status</h2>
    <div class="grid grid-cols-[auto,1fr]">
      <div>
        <p>
          last updated: <span class="italic underline"
            >{
              new Date().toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }</span
          >
        </p>
        <p>
          week: <span class="italic underline"
            >{
              new Date(startDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }</span
          > to <span class="italic underline"
            >{
              new Date(endDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }</span
          >
        </p>
      </div>
      <div class="flex flex-col items-end">
        <p>
          {
            nextWeek ? (
              <a
                href={`/thisweek/${nextWeek.slug}`}
                class="text-blue-600 hover:underline"
              >
                &lt; next week
              </a>
            ) : (
              <span class="text-gray-400">&lt; next week</span>
            )
          }
        </p>
        <p>
          {
            prevWeek ? (
              <a
                href={`/thisweek/${prevWeek.slug}`}
                class="text-blue-600 hover:underline"
              >
                prev week &gt;
              </a>
            ) : (
              <span class="text-gray-400">prev week &gt;</span>
            )
          }
        </p>
      </div>
    </div>
  </div>
  <div>
    <article class="prose">
      <Content />
    </article>
  </div>
</BaseLayout>
